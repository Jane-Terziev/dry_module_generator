<% module_namespacing do -%>
module <%= module_name.capitalize %>
  module App
    class <%= class_name %>Service < ApplicationService
      include Import[<%= class_name.downcase %>_repository: "<%= module_name %>.<%= class_name.downcase %>_repository"]

      def create_<%= class_name.downcase %>(command)
        result = ActiveRecord::Base.transaction do
          <%= class_name.downcase %>_repository.create!(command.to_h.merge(id: SecureRandom.uuid))
        end
      end

      def update_<%= class_name.downcase %>(command)
        result = ActiveRecord::Base.transaction do
          <%= class_name.downcase %> = <%= class_name.downcase %>_repository.find(command.id)
          <%= class_name.downcase %>.update!(command.to_h)
          <%= class_name.downcase %>
        end
      end

      def delete_<%= class_name.downcase %>(id)
        result = ActiveRecord::Base.transaction do
          <%= class_name.downcase %>_repository.delete!(<%= class_name.downcase %>_repository.find(id))
        end
      end

      def get_all_<%= class_name.pluralize.downcase %>
        map_into(<%= class_name.downcase %>_repository.all, Get<%= class_name.pluralize %>ListDto)
      end

      def get_<%= class_name.downcase %>(id)
        map_into(<%= class_name.downcase %>_repository.find(id), Get<%= class_name %>DetailsDto)
      end
    end
  end
end
<% end -%>