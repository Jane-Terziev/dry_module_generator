module <%= module_name.capitalize %>
  module App
    class <%= class_name %>Service < ApplicationService
      include Import[<%= class_name.downcase %>_repository: "<%= module_name %>.<%= class_name.downcase %>_repository"]

      def create_<%= class_name.downcase %>(command)
        <%= class_name.downcase %> = ActiveRecord::Base.transaction do
          <%= class_name.downcase %> = <%= class_name.downcase %>_repository.create_new(<% options[:attributes].each do |field_name, _| %>
            <%= field_name %>: command.<%= field_name %>,<% end %>
          )
          <%= class_name.downcase %>_repository.save!(<%= class_name.downcase %>)
        end

        event_publisher.publish_all(<%= class_name.downcase %>.domain_events)
      end

      def update_<%= class_name.downcase %>(command)
        <%= class_name.downcase %> = ActiveRecord::Base.transaction do
          <%= class_name.downcase %> = <%= class_name.downcase %>_repository.find(command.id)
          <%= class_name.downcase %>.update_<%= class_name.downcase %>(<% options[:attributes].each do |field_name, _| %>
            <%= field_name %>: command.<%= field_name %>,<% end %>
          )
          <%= class_name.downcase %>_repository.save!(<%= class_name.downcase %>)
        end

        event_publisher.publish_all(<%= class_name.downcase %>.domain_events)
      end

      def delete_<%= class_name.downcase %>(id)
        result = ActiveRecord::Base.transaction do
          <%= class_name.downcase %>_repository.delete!(<%= class_name.downcase %>_repository.find(id))
        end
      end
    end
  end
end