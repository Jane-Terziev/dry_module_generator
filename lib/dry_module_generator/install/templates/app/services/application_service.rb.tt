class ApplicationService
  include Import[event_publisher: 'events.publisher', current_user_repository: 'current_user_repository']
  include Pagy::Backend

  def paginate_collection(collection:, mapper:, page:, page_size:, filter:, size: 5, options: {})
    result = pagy(collection.ransack(filter).result, items: page_size, page: page, size: size)

    pagy_metadata = result[0]
    paginated_data = result[1]

    PaginationListDto.new(
      data: map_into(paginated_data, mapper, options),
      pagination: map_into(pagy_metadata, PaginationDto)
    )
  end

  def map_into(data, mapper, options = {})
    DryObjectMapper::Mapper.call(data, mapper, options)
  end
end